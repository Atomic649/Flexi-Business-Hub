
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.15.0
 * Query Engine version: 12e25d8d06f6ea5a0252864dd9a03b1bb51f3022
 */
Prisma.prismaVersion = {
  client: "5.15.0",
  engine: "12e25d8d06f6ea5a0252864dd9a03b1bb51f3022"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  firstName: 'firstName',
  lastName: 'lastName',
  avatar: 'avatar',
  createAt: 'createAt',
  updatedAt: 'updatedAt',
  phone: 'phone'
};

exports.Prisma.MemberScalarFieldEnum = {
  uniqueId: 'uniqueId',
  role: 'role',
  permission: 'permission',
  createAt: 'createAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.BusinessAccScalarFieldEnum = {
  id: 'id',
  businessName: 'businessName',
  vatId: 'vatId',
  businessType: 'businessType',
  taxType: 'taxType',
  userId: 'userId',
  memberId: 'memberId'
};

exports.Prisma.BillScalarFieldEnum = {
  id: 'id',
  createAt: 'createAt',
  updatedAt: 'updatedAt',
  cName: 'cName',
  cLastname: 'cLastname',
  cPhone: 'cPhone',
  cGender: 'cGender',
  cAdress: 'cAdress',
  cProvince: 'cProvince',
  cPostId: 'cPostId',
  product: 'product',
  payment: 'payment',
  amount: 'amount',
  purcheseAt: 'purcheseAt',
  platform: 'platform',
  cashStatus: 'cashStatus',
  price: 'price',
  imageBill: 'imageBill',
  memberId: 'memberId',
  businessAcc: 'businessAcc'
};

exports.Prisma.AdsCostScalarFieldEnum = {
  id: 'id',
  date: 'date',
  createAt: 'createAt',
  updatedAt: 'updatedAt',
  adsCost: 'adsCost',
  memberId: 'memberId',
  platformId: 'platformId',
  businessAcc: 'businessAcc'
};

exports.Prisma.ExpenceScalarFieldEnum = {
  date: 'date',
  createAt: 'createAt',
  updatedAt: 'updatedAt',
  id: 'id',
  amount: 'amount',
  group: 'group',
  image: 'image',
  businessAcc: 'businessAcc',
  memberId: 'memberId'
};

exports.Prisma.PlatformScalarFieldEnum = {
  id: 'id',
  platform: 'platform',
  accName: 'accName',
  accId: 'accId',
  createAt: 'createAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  barcode: 'barcode',
  image: 'image',
  stock: 'stock',
  price: 'price',
  categoryId: 'categoryId',
  memberId: 'memberId',
  statusId: 'statusId',
  createdId: 'createdId',
  updatedId: 'updatedId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  owner: 'owner',
  marketing: 'marketing',
  acccountance: 'acccountance',
  sales: 'sales'
};

exports.taxType = exports.$Enums.taxType = {
  Juristic: 'Juristic',
  Individual: 'Individual'
};

exports.Gender = exports.$Enums.Gender = {
  Female: 'Female',
  Male: 'Male'
};

exports.Payment = exports.$Enums.Payment = {
  COD: 'COD',
  Transfer: 'Transfer',
  CaditCard: 'CaditCard'
};

exports.SocialMedia = exports.$Enums.SocialMedia = {
  Facebook: 'Facebook',
  Line: 'Line',
  Tiktok: 'Tiktok',
  Shopee: 'Shopee',
  Lazada: 'Lazada'
};

exports.Prisma.ModelName = {
  User: 'User',
  Member: 'Member',
  BusinessAcc: 'BusinessAcc',
  Bill: 'Bill',
  AdsCost: 'AdsCost',
  Expence: 'Expence',
  Platform: 'Platform',
  Product: 'Product'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
